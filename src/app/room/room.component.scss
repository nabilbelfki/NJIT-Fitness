.room-card {
    width: 80%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Align items at the top of the container */
    align-items: center;
    border: 1px solid #ccc;
    border-radius: 20px; /* Increase the border-radius for more rounded corners */
    margin: 20px auto;
    position: relative;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease-in-out; /* Add a smooth transition on hover */

    &:hover {
      transform: scale(1.05); /* Enlarge the card on hover */
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
  }
  
  .room-card img {
    width: 100%;
    max-height: 500px; /* Adjust the height as needed */
    object-fit: cover;
    border-radius: 20px 20px 0 0; /* Apply round corners only to the top */
  }
  
  .room-card h3 {
    margin-top: 15px;
    font-size: 24px;
    text-align: center;
  }
  
  .room-card p {
    margin-top: 10px;
    font-size: 18px;
    color: #444;
    text-align: center;
  }

  .edit-icon {
    width: 60px; /* 80% of the circle */
    height: 60px; /* 80% of the circle */
    position: absolute;
    bottom: 10px;
    right: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #f1f1f1; /* Lighter color for the edit icon background */
    border-radius: 50%;
    cursor: pointer;
    bottom: 60px; /* Position the icon 10px from the bottom */
    left: 50%; /* Position the icon 50% from the left */
    transform: translateX(-50%); /* Center the icon horizontally */
    transition: transform 0.2s ease-in-out; /* Add a smooth transition on hover */
    
  }
  
  .edit-icon svg {
    width: 80%; /* Adjust the size of the SVG icon */
    height: 80%;
    fill: black; /* Darker color for the edit icon */
  }
  
  .edit-icon:hover {
    background-color: darkgrey; /* Lighter color for the edit icon background on hover */
  }

  .form {
    /* Additional styles for the form */
    width: 100%;
    max-width: 800px; /* Adjust the width as needed */
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;

    .form-group {
      /* Styles for each form group (label + input) */
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 10px;

      label {
        /* Styles for the label */
        color: #555555;
        font-weight: bold;
        margin-bottom: 5px;
      }

      input {
        /* Styles for the input */
        width: 100%;
        height: 40px;
        font-size: 36px;
        color: #1A2421;
        max-width: 300px; /* Adjust the width as needed */
        padding: 5px;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 5px;
      }
    }
  }

  .save-button {
    /* Styles for the Save button */
    background-color: #007bff;
    color: #fff;
  }
  
  .close-button {
    /* Styles for the Close button */
    background-color: grey;
  }

  .form-buttons {
    /* Styles for the form buttons */
    display: flex;
    justify-content: center;
    margin-top: 20px;

    button {
      /* Styles for the buttons */
      margin: 0 10px;
      padding: 10px 10px;
      width: 60px;
      height: 60px;
      border: none;
      color: #fff;
      border-radius: 5px;
      cursor: pointer;
    }
  }

/* Add this style in your component's SCSS file or global styles */
.skeleton-loading {
  /* Define your skeleton loading effect, for example: */
  background-color: #e0e0e0;
  background-image: linear-gradient(90deg, #e0e0e0 25%, #f0f0f0 50%, #e0e0e0 75%);
  background-size: 200%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% {
    background-position: 100%;
  }
  100% {
    background-position: -100%;
  }
}
